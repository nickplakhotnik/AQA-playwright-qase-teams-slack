name: Playwright Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  create_qase_test_run:
    name: Create Qase Test Run
    runs-on: ubuntu-latest
    outputs:
      qase_run_id: ${{ steps.qase-run-create.outputs.id }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current date
        id: get-date
        run: echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create a Qase test run
        id: qase-run-create
        uses: qase-tms/gh-actions/run-create@v1
        with:
          token: ${{ secrets.QASE_API_TOKEN }}
          project: ${{ secrets.QASE_PROJECT_CODE }}
          title: "Playwright Test Run ${{ steps.get-date.outputs.date }}"
          description: "Automated Playwright test run"
          verbose: true

  playwright-tests:
    name: Run Playwright Tests
    needs: [create_qase_test_run]
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Store Playwright's Version
        run: |
          echo "PLAYWRIGHT_VERSION=$(node -p "require('@playwright/test/package.json').version")" >> $GITHUB_ENV

      - name: Cache Playwright Browsers for Playwright's Version
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

      - name: Install Playwright Browsers
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: npx playwright install

      - name: Install Playwright Dependencies
        run: npx playwright install-deps

      - name: Run Playwright tests
        env:
          CI: true
          EMAIL: ${{ secrets.EMAIL }}
          PASSWORD: ${{ secrets.PASSWORD }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          POWER_WEBHOOK: ${{ secrets.POWER_WEBHOOK }}
          QASE_API_TOKEN: ${{ secrets.QASE_API_TOKEN }}
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          QASE_TESTOPS_RUN_ID: ${{ needs.create_qase_test_run.outputs.qase_run_id }}
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}

      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1

  merge-reports:
    name: Merge Reports
    if: ${{ !cancelled() }}
    needs: [create_qase_test_run, playwright-tests]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report and send MS Teams notification
        env:
          QASE_PROJECT_CODE: ${{ secrets.QASE_PROJECT_CODE }}
          QASE_TESTOPS_RUN_ID: ${{ needs.create_qase_test_run.outputs.qase_run_id }}
          POWER_WEBHOOK: ${{ secrets.POWER_WEBHOOK }}
        run: npx playwright merge-reports --config=merge.config.ts ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 14
